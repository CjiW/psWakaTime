import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { getList } from "./api/home";
import { Table, Tag } from "antd";
import { useEffect, useState } from "react";
import { ColumnsType } from "antd/es/table";
import Link from "next/link";
import { useRouter } from "next/router";
import { useIsMobile } from "@/utils";

const inter = Inter({ subsets: ["latin"] });


interface UserData {
  user: {
    username: string;
    avatar: string;
  };
  total: number;
  average: number;
  langs: string[];
}

export default function Home() {
  const [dataList, setDataList] = useState<UserData[]>([]);
  const [loading, setLoading] = useState(false);

  const isMobile = useIsMobile();

  const router = useRouter();
  async function getData() {
    setLoading(true);
    try {
      const { data } = await getList(router.query.language as string);
      const totalList = data.data;
      setLoading(false);
      setDataList(totalList);
    } catch (err) {
      setLoading(false);
    }
  }

  function formatSeconds(value: number) {
    let s = value % 60;
    let m = Math.floor(value / 60) % 60;
    let h = Math.floor(value / 60 / 60);
    if (h) {
      return `${h} hrs ${m} mins ${s} secs`;
    } else if (m) {
      return `${m} mins ${s} secs`;
    } else {
      return `${s} secs`;
    }
  }

  useEffect(() => {
    getData();
  }, [router.query.language]);

  const formColumn: ColumnsType<UserData> = [
    {
      title: "排名",
      key: "index",
      dataIndex: "index",
      align: "center",
      render: (text, column, idx) => {
        return <span>{Number(idx) + 1}</span>;
      },
    },
    {
      title: "用户",
      key: "userName",
      dataIndex: "user",
      align: "center",
      render: (user) => {
        return (
          <div className={styles.user}>
            <Image width={16} height={16} src={user.avatar} alt="avatar" />
            <Link href={`https://wakatime.com/${user.username}`}>
              {user.username}
            </Link>
          </div>
        );
      },
    },
    {
      title: `最近一周${isMobile ? "" : "摸鱼时长"}`,
      key: "totalTime",
      dataIndex: "total",
      align: "center",
      render: (total) => {
        return <span>{ formatSeconds(total) }</span>;
      }
    },
    {
      title: `平均每日${isMobile ? "" : "摸鱼时长"}`,
      key: "averageTime",
      dataIndex: "average",
      align: "center",
      render: (average) => {
        return <span>{ formatSeconds(average) }</span>;
      }
    },
    {
      title: "摸鱼工具",
      key: "tools",
      dataIndex: "languages",
      align: "center",
      render: (languages) => {
        let tooMany = false;
        if (languages.length >= 9) {
          languages.splice(9);
          tooMany = true;
        }
        return languages.map((item: string) => (
          <Link key={item} href={`./?lang=${item}`}>
            <Tag color="blue">{item}</Tag>
          </Link>
        ));
      },
    },
  ];

  return (
    <>
      <Head>
        <title>ps摸鱼社</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="https://wakatime.com/static/img/wakatime.svg" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <h2 className={styles.title}>
          <Link href={"/"} legacyBehavior={false}>
            ps摸鱼情况统计
          </Link>
          {router.query.language?.length && (
            <>
              <span>·</span>
              <Link href={`./language=${router.query.language}`}>
                {router.query.language}
              </Link>
            </>
          )}
        </h2>
        <Table
          className={styles.table}
          columns={formColumn}
          dataSource={dataList}
          pagination={false}
          loading={loading}
          size={isMobile ? "small" : "large"}
        ></Table>
      </main>
    </>
  );
}
